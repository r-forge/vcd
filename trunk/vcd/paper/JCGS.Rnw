\documentclass[10pt,a4paper]{article}

%% Packages:
\usepackage{graphicx,color,a4wide,thumbpdf,hyperref}

%% \usepackage{Sweave} is essentially
\RequirePackage[T1]{fontenc}
\RequirePackage{ae,fancyvrb}
\DefineVerbatimEnvironment{Sinput}{Verbatim}{fontshape=sl}
\DefineVerbatimEnvironment{Soutput}{Verbatim}{}
\DefineVerbatimEnvironment{Scode}{Verbatim}{fontshape=sl}
\newenvironment{Schunk}{}{}

%% BibTeX
\usepackage[authoryear,round,longnamesfirst]{natbib}
\bibliographystyle{asa}
\bibpunct{(}{)}{;}{a}{}{,}

%% new commands
\let\code=\texttt
\let\proglang=\textsf
\newcommand{\pkg}[1]{{\normalfont\fontseries{b}\selectfont #1}}
\newcommand{\given}{\, | \,}

%% Colors
\definecolor{Red}{rgb}{0.7,0,0}
\definecolor{Blue}{rgb}{0,0,0.8}
\definecolor{hellgrau}{rgb}{0.55,0.55,0.55}

%% mimic JCGS style
\renewcommand{\section}{\secdef \mysec \mysecnn}
\newcommand{\mysec}[2][default]{\vspace{1.3\baselineskip}%
  \pdfbookmark[1]{#1}{Section.\thesection.#1}%
  \refstepcounter{section}%
  {\begin{center} \large \bf \thesection. \uppercase{#1} \end{center}}%
  \vspace{0.7\baselineskip}}
\newcommand{\mysecnn}[1]{\vspace{1.3\baselineskip}%
  {\begin{center}\large \bf \uppercase{#1} \end{center}}%
  \vspace{0.7\baselineskip}}

\renewcommand{\subsection}{\secdef \mysubsec \mysubsecnn}
\newcommand{\mysubsec}[2][default]{\vspace{1.2\baselineskip}%
  \pdfbookmark[2]{#1}{Subsection.\thesubsection.#1}%
  \refstepcounter{subsection}%
  \noindent%
  {\large \textbf{\thesubsection{} {\sc#1}}} \vspace{.7\baselineskip}}
\newcommand{\mysubsecnn}[1]{\vspace{1.2\baselineskip}%
  \noindent%
  {\large \textbf{{\sc #1}}} \vspace{.7\baselineskip}}
\renewcommand{\abstractname}{}
\renewcommand{\refname}{REFERENCES}

%% Hyperref
\hypersetup{%
  pdftitle = {Residual-based Shadings for Visualizing (Conditional) Independence},
  pdfsubject = {Residual-based Shadings},
  pdfkeywords = {contingency tables, association plots, mosaic plots, HCL colors, 
    HSV colors, conditional inference, permutation tests},
  pdfauthor = {Achim Zeileis, David Meyer, Kurt Hornik},
  %% change colorlinks to false for pretty printing
  colorlinks = {true},
  linkcolor = {Blue},
  citecolor = {Blue},
  urlcolor = {Red},
  hyperindex = {true},
  linktocpage = {true},
}


\begin{document}

\begin{center}
\textbf{\LARGE Residual-based Shadings for Visualizing\\[.15cm] (Conditional) Independence}

\vspace{0.5cm}
{\large Achim \textsc{Zeileis}, David \textsc{Meyer}, and Kurt \textsc{Hornik}}

%% \vspace{0.3cm}
%% \textit{\large Wirtschaftsuniversit\"at Wien, Augasse 2--6, 1090 Wien, Austria}\\[0.14cm]
%% {\large \textit{E-mail:} \texttt{Firstname.Lastname@wu-wien.ac.at}}
\end{center}

\SweaveOpts{engine=R,eps=FALSE}
\setkeys{Gin}{width=0.8\textwidth}

<<load_data,echo=FALSE,results=hide>>=
library(vcd)

data(Arthritis)
art <- xtabs(~ Treatment + Improved, data = Arthritis, subset = Sex == "Female")

data(UCBAdmissions)
ucb <- aperm(UCBAdmissions)

myseed <- 1071
@

<<inference,echo=FALSE,results=hide>>=
if(FALSE) {
  set.seed(myseed)
  art_max <- coindep_test(art, n = 5000)
  set.seed(myseed)
  art_chisq <- coindep_test(art, n = 5000, indepfun = function(x) sum(x^2))

  set.seed(myseed)
  art_gp <- shading_max(art, n = 5000)

  set.seed(myseed)
  ucb_doublemax <- coindep_test(ucb, "Dept", n = 5000)
  set.seed(myseed)
  ucb_maxChisq <- coindep_test(ucb, "Dept", n = 5000, indepfun = function(x) sum(x^2))
  set.seed(myseed)
  ucb_sumChisq <- coindep_test(ucb, "Dept", n = 5000, indepfun = function(x) sum(x^2), aggfun = sum)

  set.seed(myseed)
  ucb_cotab <- cotab_coindep(ucb, condvars = "Dept", type = "assoc", n = 5000)
  
  save(art_max, art_chisq, art_gp,
       ucb_doublemax, ucb_maxChisq, ucb_sumChisq, ucb_cotab,
       file = "JCGS-inference.rda")
} else {
  load("JCGS-inference.rda")
}
@

<<auxiliary_functions,echo=FALSE,results=hide>>=
stat <- function(x, digits = 3) as.vector(round(x$statistic, digits = digits))
pval <- function(x, digits = 6) {
  oop <- options()
  on.exit(oop)
  options(scipen = 1000)
  as.vector(round(x$p.value, digits = digits))
}

hue.slice <- function(hue, grid.n = 100, type = c("HCL", "HSV"), plot = TRUE, fixup = FALSE)
{
  type <- match.arg(type)
  if(type == "HCL") {
    chroma = seq(0, 100, length = grid.n)
    luminance = seq(0, 100, length = grid.n)
    nc <- length(chroma)
    nl <- length(luminance)
    color.slice <- outer(chroma, luminance, function(y, x) hcl(hue, x, y, fixup = fixup))
    xlab <- "chroma"
    ylab <- "luminance"
    main <- paste("hue =", round(hue, digits = 0))
  } else {
    chroma = seq(0, 1, length = grid.n)
    luminance = seq(0, 1, length = grid.n)
    nc <- length(chroma)
    nl <- length(luminance)
    color.slice <- outer(chroma, luminance, function(y, x) hsv(hue, x, y))
    xlab <- "saturation"
    ylab <- "value"
    main <- paste("hue =", round(hue, digits = 3))
  }
  if(plot) {
    plot(0.5, 0.5, xlim = range(chroma), ylim = range(luminance), type = "n", axes = FALSE,
         xlab = xlab, ylab = ylab, yaxs = "i", xaxs = "i", main = main)
    for(i in 1:(nc-1)) {
      rect(chroma[i], luminance[-nl], chroma[i] + 100/(nc-1), luminance[-1], border = color.slice[,i+1], col = color.slice[,i+1])
    }
    axis(1)
    axis(2)
    box()
  }
  colnames(color.slice) <- chroma
  rownames(color.slice) <- luminance
  attr(color.slice, "type") <- type
  class(color.slice) <- "slice"
  invisible(color.slice)
}
@


\begin{abstract}
Visualizing independence by association and mosaic plots.

Enhancements: diverging color palette based on HCL color space
combined with visualization of the result of a significance test.

Extensions to visualizing conditional independence.\\[0.3cm]

\textbf{Key Words:} Association plots; Conditional inference; 
  Contingency tables; HCL colors; HSV colors; Mosaic plots; Permutation tests.
\end{abstract}

\section{Introduction} \label{sec:introduction}

independence in 2-way tables

association and mosaic displays

colors and color spaces

somewhere:
mention Augsburg stuff, visualization of log-linear models via mosaics
\citep{vcd:Theus+Lauer:1999,vcd:Hofmann:2003,vcd:Hofmann:2001}.

Association plots as residual plots for log-linear models
\citep{vcd:Meyer+Zeileis+Hornik:2003}, especially
in coplot or trellis layout.


\section{Independence in 2-way Tables}
\label{sec:2way}

In this section, the basic tools for testing and visualizing 
independence in 2-way tables are briefly reviewed. 
For illustration, a data set about treatment and improvement of
patients with rheumatoid arthritis from \cite{vcd:Koch+Edwards:1988}
is used. The data set is also discussed in \cite{vcd:Friendly:2000}
and the subset of the $59$ female patients from the study is given in
Table~\ref{tab:art}.


\subsection{Tests}
\label{sec:tests}

To fix notations, we consider a 2-way contingency table with cell
frequencies $\{n_{ij}\}$ for $i = 1, \dots, I$ and $j = 1, \dots, J$
and row and column sums $n_{i+} = \sum_i n_{ij}$ and $n_{+j} = \sum_j n_{ij}$
respectively.
For convenience the number of observations is denoted $n = n_{++}$.
Given an underlying distribution with theoretical cell probabilities
$\pi_{ij}$, the null hypothesis of independence of the two categorical
variables can be formulated as
\begin{equation} \label{eq:H0}
H_0: \; \pi_{ij} \quad = \quad \pi_{i+} \pi_{+j}.
\end{equation}

The expected cell frequencies in this model are
$\hat n_{ij} = n_{i+}n_{+j}/n$. The probably best known and most used
measure of discrepancy between observed and expected values are the Pearson residuals
\begin{equation} \label{eq:Pearson}
r_{ij} \quad = \quad \frac{n_{ij} - \hat n_{ij}}{\sqrt{\hat n_{ij}}}.
\end{equation}
The most convenient way to aggregate the $I \times J$ residuals
to one test statistic is their squared sum
\begin{equation} \label{eq:ChiSquare}
X^2 \quad = \quad \sum_{i, j}r_{ij}^2,
\end{equation}
because this is known to have an unconditional limiting $\chi^2$ distribution with $(I-1)(J-1)$
degrees of freedom under the null hypothesis.
This is the well-known $\chi^2$ test which is typically introduced at the very beginning
of the chapter about independence in 2-way tables in statistics textbooks
\citep[see e.g.,][]{vcd:Agresti:2002}.

\begin{table}[t!]
\begin{center}
\caption{\label{tab:art} Treatment and improvement among $59$ patients
with rheumatoid arthritis.}
\begin{tabular}{rr|rrr}
                   &         & \multicolumn{3}{|l}{\textbf{Improved}} \\
                   &         & None & Some & Marked \\ \hline
\textbf{Treatment} & Placebo &   19 &    7 &      6 \\
                   & Treated &    6 &    5 &     16
\end{tabular}
\end{center}
\end{table}

But the sum of squares is not the only plausible way of capturing deviations
from $0$ in the Pearson residuals.
There are many other conceivable functionals $\lambda(\cdot)$ which
lead to reasonable test statistics $\lambda(\{r_{ij}\})$: one which is particularly
suitable for identifying the cells which cause the dependence (if any) is
the maximum of the absolute values
\begin{equation} \label{eq:MaxAbs}
M \quad = \quad \max_{i, j} |r_{ij}|.
\end{equation}
Given a critical value $c_\alpha$ for this test statistic, all residuals whose
absolute value exceeds $c_\alpha$ violate the hypothesis of indendence at significance level
$\alpha$ \cite[][Ch.~7]{vcd:Mazanec+Strasser:2000}. Thus, the interesting cells causing
the dependence can easily be identified.

Furthermore, an important reason for using the unconditional limiting distribution
for the $X^2$ statistic (\ref{eq:ChiSquare}) was the closed form result
for the distribution. Recently, with the improving perfomance of computers,
conditional inference (or permutation tests)---carried out either by simulation
or by computation of the (asymptotic) permutation distribution---have been receiving
increasing attention \citep{vcd:Pesarin:2001,vcd:Strasser+Weber:1999}. 
For testing the independence hypothesis (\ref{eq:H0}), using a permutation test is particularly
intuitive due to the permutation invariance (given row and column sums) of this problem.
Consequently, all results in this paper are based on conditional inference performed
by simulating from the permutation distribution of test statistics of type
$\lambda(\{r_{ij}\})$.

Other measures of discrepancy (e.g., deviance residuals) could, of course, also be used
instead of the the Pearson residuals $\{r_{ij}\}$. But as the ideas discussed here
extend straightforwardly to that situation, we do not discuss it in detail.

For the arthritis data from Table~\ref{tab:art}, both tests indicate a clearly significant
dependence of improvement on treatment: the sum-of-squares statistic from Equation~(\ref{eq:ChiSquare})
is $X^2 = \Sexpr{stat(art_chisq)}$ with a $p$ value of $p = \Sexpr{pval(art_chisq)}$,
and the maximum statistion from Equation~(\ref{eq:MaxAbs}) is $M = \Sexpr{stat(art_max)}$
with a $p$ value of $p = \Sexpr{pval(art_max)}$. Both $p$ values have been computed
by drawing a sample of size $5000$ from the permutation distribution under independence.



\subsection{Visualizations} \label{sec:visualization}

Two well-established visualization techniques for independence in 2-way tables are
mosaic plots and association plots. Both are suitable to bring out
departures of an observed table $\{n_{ij}\}$ from the expected table $\{\hat n_{ij}\}$
in a graphical way. The latter focuses on the visualization of the Pearson residuals
$r_{ij}$ (under independence) while the latter primarily displays the observed frequencies
$n_{ij}$.

\emph{Mosaic plots}
\citep{vcd:Hartigan+Kleiner:1981} can be seen as an extension of grouped
bar charts where width and height of the bars show the relative
frequencies of the two variables: a mosaic plot simply
consists of a collection of tiles whose
sizes are proportional to the observed cell frequencies as shown
in the left panel of Figure~\ref{fig:classic}. A rectangle corresponding
to $100$ percent of the observations is first split horizontally with respect to 
the treatment frequencies and then vertically with respect to the conditional
improvement frequencies. This shows that there have been more placebo than treated 
patients with no improvement and vice versa for marked improvement.
This strategy of splitting with respect to conditional frequencies given all
previous variables can also directly be used for visualizing multi-way tables
\citep[see][for an overview of how to construct and read mosaic displays]{vcd:Hofmann:2003}.

\emph{Association plots}
\citep{vcd:Cohen:1980} visualize the table of Pearson residuals:
each cell is represented by a rectangle that has (signed) height
proportional to the corresponding Pearson residual $r_{ij}$ and width proportional to the
square root of the expected counts $\sqrt{\hat n_{ij}}$. Thus, the area is proportional to
the raw residuals $n_{ij} - \hat n_{ij}$. The association plot for the arthritis
data is shown in the right panel of Figure~\ref{fig:classic} which leads to the
same interpretation as the mosaic plot: there are more placebo patients with no 
improvement and fewer with marked improvement than expected under independence---vice
versa for the treated patiens.


\setkeys{Gin}{width=\textwidth}
\begin{figure}[htbp]
\begin{center}
<<classic_plots,fig=TRUE,echo=FALSE,height=6,width=11,results=hide>>=
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
pushViewport(viewport(layout.pos.col=1, layout.pos.row=1))
mosaic(art, newpage = FALSE, margins = c(2.5, 4, 2.5, 3))
popViewport()
pushViewport(viewport(layout.pos.col=2, layout.pos.row=1))
assoc(art, newpage = FALSE, margins = c(5, 2, 5, 4))
popViewport(2)
@
\caption{Classic mosaic and association plot for the Arthritis data.}
\label{fig:classic}
\end{center}
\end{figure}

\section{Residual-based Shadings} \label{sec:shadings}

Colors are commonly used to enhance mosaic and association plots. To integrate
a visualization of the Pearson residuals $\{r_{ij}\}$ into the mosaic display---which
in its `raw' version only visualizes the observed frequencies $\{n_{ij}\}$---\cite{vcd:Friendly:1994}
suggested a residual-based shading for the mosaic tiles that can also be applied
to the rectangles in association plots \citep{vcd:Meyer+Zeileis+Hornik:2003}. 
In this section, we first briefly review the \cite{vcd:Friendly:1994} shading, 
before we suggest different colors and a combination of visualization and significance
testing.

\subsection{Friendly Shading}


A first extension by
\cite{vcd:Friendly:1994} uses a color coding of the tiles to visualize deviations
(residuals) from a given log-linear model fitted to the table, that is, from
the expected frequencies under independence. This approach does not only work in 2-way
tables but also in log-linear models fitted to multi-way tables. In this
extension, positive and negative signs of the residuals are coded by rectangles with
solid and dashed borders respectively. Furthermore, residuals exceeding an absolute
value of 2 are shaded light blue and red respectively, those that even
exceed an absolute value of 4 are shaded with full saturation. The heuristic
behind this shading is that
the Pearson residuals are approximately standard normal which implies
that the highlighted cells are those with
residuals \emph{individually} significant at approximately the 5\% and 0.01\%
level. But the main purpose of the shading is not to visualize significance but the \emph{pattern} of
deviation from independence \citep[p.~109]{vcd:Friendly:2000}. 

The extensions of \cite{vcd:Friendly:1994} to mosaic plots provide
substantial improvement of the original mosaic plots and enhanced them
from a plot for contingency tables to a visualization technique for
log-linear models (and therefore also for certain independence problems).
However, it has two major drawbacks: First,
the significance level for the hard-coded critical values 2 and 4 is
usually unknown. Second, the colors for (light) blue and red
used in the Michael Friendly's \textsf{SAS} implementation and also in the base implementation
in \textsf{R} are not device-independent and
do not provide homogeneous saturations over different colors
and copier proofness. We suggest some ways to overcome these drawbacks.

The implementation of Friendly mosaic plots in \textsf{SAS}
uses (by default) colors in the HLS (Hue--Luminance--Saturation) color space
with hues for blue and red, full saturation, and varying luminance
for lighter colors. The current \textsf{R} implementation is
based on colors in the HSV (Hue--Saturation--Value) space where
decreasing the saturation from 1 towards 0
%% ---given the hue for blue or red and full saturation---
generates very similar colors
as increasing the luminance for HLS colors from 0.5 towards 1.
As an alternative to those HLS and HSV colors, the device-independent
HCL (Hue--Chroma--Luminance) color space \citep{vcd:Ihaka:2003} could be
used which also provides homogeneous saturations over different colors and copier
proofness. The resulting association plot (using critical values for
$\alpha = 0.1$ and $0.01$) for the Bundesliga data can be seen in
Figure \ref{fig:goals-assoc-signif}. It indicates very clearly that
there is no evidence for rejecting the hypothesis of independence
in this table. Thus, there seems to be neither an advantage for
the home team nor for the away team.


\subsection{Colors}

currently: chosen based on HSV or HLS color spaces,
hue (red and blue) codes sign of residuals, and saturation the absolute size
in three steps, value currently unused (always set to full value)

disadvantages:
  - perceptually not uniform
    because the three perceptual dimensions (hue, lightness, saturation)
    are not properly mapped to the three dimensions of the color space
    and hence are confounded \citep{vcd:Brewer:1999}    
    in particular, saturation is not uniform across different hues.
    
  - can lead to color-caused optical illusions in statistical graphs
    \citep{vcd:Cleveland+McGill:1983}
  
  - flashy fully saturated HSV colors are good for drawing attention to a plot,
    but hard to look at for a longer time, hence mosaic displays using these 
    colors are harder to interpret
    
  - white is not very suitable as a neutral color, grey conveys neutrality or 
    uninterestingness much better

Alternatives:
  - \cite{vcd:Munsell:1905} introduced color notation for balanced colors
  - Commission Internationale de l'\'Eclairage (CIE) introduced two perceptually
    based color spaces CIELAB and CIELUV where the latter is preferred for 
    emissive color technologies such as computer displays.
  - \pkg{ColorBrewer.org} \citep{vcd:Harrower+Brewer:2003} is an online tool
    for selcting different sets of colors, based on similar ideas. It includes
    qualitative, sequential and diverging palettes.
  - \cite{vcd:Ihaka:2003} discusses how CIELUV colors can be used for choosing
    colors for statistical graphics such as barplots. He recommends to use
    polar coordinates in the CIELUV space---called HCL space, using hue, chroma
    and luminance---and suggests a strategy for choosing qualitative schemes based
    on these.

We discuss how similar ideas can be used for deriving a diverging HCL scheme that 
is suitable for visualizing residuals in association and mosaic displays.

HCL
  - irregular double cone, i.e., chroma/luminance plane looks rather different
    for different hues
  - choose two hues that look similar in the chroma/luminance plane to code
    the sign of the residuals. Also use red and blue at full chroma for large
    residuals and use a light gray (instead of a white at the top of the luminance
    scale) as the neutral color for small residuals, interpolate between.
  - for non-significant results, clearly reduce the amount of color, i.e. the maximum
    chroma used.
    
Advantages
  - based on a perceptually uniform color space
  - device independent

\setkeys{Gin}{width=.8\textwidth}
\begin{figure}[p]
\begin{center}
<<shading_HSV,fig=TRUE,echo=FALSE,height=7,width=8>>=
## generate colors
hue23 <- hue.slice(2/3, grid.n = 101, plot = FALSE, type = "HSV")
hue0 <- hue.slice(0, grid.n = 101, plot = FALSE, type = "HSV")
saturation <- as.numeric(colnames(hue23))
value <- as.numeric(rownames(hue23))

## select those with value >= 0.5
hue23 <- hue23[value >= .5, ]
hue0 <- hue0[value >= .5, ]
value <- value[value >= .5]
nl <- nrow(hue23)
nc <- ncol(hue23)

## plot 2 slides from HSV space
plot(0.5, 0.5, xlim = c(-1, 1), ylim = c(0, 1), type = "n", axes = FALSE,
       xlab = "", ylab = "", yaxs = "i", xaxs = "i", main = "")
for(i in 1:(nc-1)) {
  rect(saturation[i], value[-nl], saturation[i] + 1/(nc-1), value[-1], border = hue23[,i+1], col = hue23[,i+1])
}
for(i in 1:(nc-1)) {
  rect(-saturation[i], value[-nl], -(saturation[i] + 1/(nc-1)), value[-1], border = hue0[,i+1], col = hue0[,i+1])
}
axis(2, at = c(50, 75, 100)/100, labels = c(0.5, 0.75, 1))
axis(4, at = c(50, 75, 100)/100, labels = c(0.5, 0.75, 1))
axis(3, at = -4:4*.25, labels=c(4:0*.25, 1:4*.25))
mtext(c("hue = 0", "hue = 2/3"), side = 3, at = c(-.5, .5), line = 3, cex = 1.2)
mtext("saturation", side = 3, at = 0, line = 2)
mtext("value", side = 2, at = .75, line = 2)
mtext("value", side = 4, at = .75, line = 2)
lines(c(-1, 1), c(.5, .5))

## significant colors
rect(-1, 0.95, -.90, 1, col = hsv(0, 1, 1))
rect(-0.45, 0.95, -.55, 1, col = hsv(0, 0.5, 1))
rect(-.05, .95, .05, 1, col = hsv(2/3, 0, 1))
rect(0.45, 0.95, .55, 1, col = hsv(2/3, 0.5, 1))
rect(.90, .95, 1, 1, col = hsv(2/3, 1, 1))

text(-1, .33, "significant", pos = 4, cex = 1.2)
rect(-1, .20, -.80, .30, col = hsv(0, 1, 1))
rect(-.40, .20, -0.6, .30, col = hsv(0, 0.5, 1))
rect(-.20, .20, 0, .30, col = hsv(0, 0, 1))
rect(0, .20, .20, .30, col = hsv(2/3, 0, 1))
rect(0.4, .20, .60, .30, col = hsv(2/3, .5, 1))
rect(.80, .20, 1, .30, col = hsv(2/3, 1, 1))

lines(c(-.9, -.55), c(0.975, .975), lty = 2)
lines(c(-.45, -.05), c(0.975, .975), lty = 2)
lines(c(.45, .05), c(0.975, .975), lty = 2)
lines(c(.9, .55), c(0.975, .975), lty = 2)

## non-significant colors
rect(-1, 0.5, -.90, 0.55, col = hsv(0, 1, 0.5))
rect(-0.45, 0.5, -.55, 0.55, col = hsv(0, 0.5, 0.5))
rect(-.05, .5, .05, 0.55, col = hsv(2/3, 0, 0.5))
rect(0.45, 0.5, .55, 0.55, col = hsv(2/3, 0.5, 0.5))
rect(.90, .5, 1, 0.55, col = hsv(2/3, 1, 0.5))

text(-1, .13, "non-significant", pos = 4, cex = 1.2)
rect(-1, 0, -.80, .10, col = hsv(0, 1, 0.5))
rect(-.60, 0, -.4, .10, col = hsv(0, 0.5, 0.5))
rect(-.20, 0, 0, .10, col = hsv(0, 0, 0.5))
rect(0, 0, .20, .10, col = hsv(2/3, 0, 0.5))
rect(0.4, 0, .60, .1, col = hsv(2/3, .5, 0.5))
rect(.80, 0, 1, .10, col = hsv(2/3, 1, 0.5))

lines(c(-.9, -.55), c(0.525, .525), lty = 2)
lines(c(-.45, -.05), c(0.525, .525), lty = 2)
lines(c(.45, .05), c(0.525, .525), lty = 2)
lines(c(.9, .55), c(0.525, .525), lty = 2)
@

<<shading_HCL,fig=TRUE,echo=FALSE,height=7,width=8>>=
## generate colors
hue260 <- hue.slice(260, grid.n = 101, plot = FALSE)
hue360 <- hue.slice(360, grid.n = 101, plot = FALSE)
mychroma <- as.numeric(colnames(hue260))
luminance <- as.numeric(rownames(hue260))

## select those with lumincance >= 50
hue260 <- hue260[luminance >= 50, ]
hue360 <- hue360[luminance >= 50, ]
luminance <- luminance[luminance >= 50]
nc <- ncol(hue260)
nl <- nrow(hue260)

## plot 2 slides from HCL space
plot(0.5, 0.5, xlim = c(-100, 100), ylim = c(0, 100), type = "n", axes = FALSE,
       xlab = "", ylab = "", yaxs = "i", xaxs = "i", main = "")
for(i in 1:(nc-1)) {
  rect(mychroma[i], luminance[-nl], mychroma[i] + 100/(nc-1), luminance[-1], border = hue260[,i+1], col = hue260[,i+1])
}
for(i in 1:(nc-1)) {
  rect(-mychroma[i], luminance[-nl], -(mychroma[i] + 100/(nc-1)), luminance[-1], border = hue360[,i+1], col = hue360[,i+1])
}
axis(2, at = c(50, 75, 100), labels = c(50, 75, 100))
axis(4, at = c(50, 75, 100), labels = c(50, 75, 100))
axis(3, at = -4:4*25, labels=c(4:0*25, 1:4*25))
mtext(c("hue = 0", "hue = 260"), side = 3, at = c(-50, 50), line = 3, cex = 1.2)
mtext("chroma", side = 3, at = 0, line = 2)
mtext("luminance", side = 2, at = 75, line = 2)
mtext("luminance", side = 4, at = 75, line = 2)
lines(c(-100, 100), c(50, 50))

## significant colors
rect(-100, 47.5, -90, 52.5, col = hcl(0, 100, 50))
rect(-55, 67.5, -45, 72.5, col = hcl(0, 50, 70))
rect(-5, 95, 5, 100, col = hcl(260, 0, 100))       ## grey vs. white
rect(-5, 87.5, 5, 92.5, col = hcl(260, 0, 90))     ## grey vs. white
rect(45, 67.5, 55, 72.5, col = hcl(260, 50, 70))
rect(90, 47.5, 100, 52.5, col = hcl(260, 100, 50))

text(-100, 33, "significant", pos = 4, cex = 1.2)
rect(-100, 20, -80, 30, col = hcl(0, 100, 50))
rect(-60, 20, -40, 30, col = hcl(0, 50, 70))
rect(-20, 20, 0, 30, col = hcl(0, 0, 90))       
rect(0, 20, 20, 30, col = hcl(260, 0, 90))
#white# rect(-20, 20, 0, 30, col = hcl(0, 0, 100))
#white# rect(0, 20, 20, 30, col = hcl(260, 0, 100))
rect(40, 20, 60, 30, col = hcl(260, 50, 70))
rect(80, 20, 100, 30, col = hcl(260, 100, 50))

lines(c(-45, -5), c(72.5, 87.5), lty = 2)
lines(c(45, 5), c(72.5, 87.5), lty = 2)
lines(c(-95, -55), c(52.5, 67.5), lty = 2)
lines(c(95, 55), c(52.5, 67.5), lty = 2)

## non-significant colors
rect(-25, 47.5, -15, 52.5, col = hcl(0, 20, 50))
rect(-15, 67.5, -5, 72.5, col = hcl(0, 10, 70))
rect(5, 67.5, 15, 72.5, col = hcl(260, 10, 70))
rect(25, 47.5, 15, 52.5, col = hcl(260, 20, 50))


text(-100, 13, "non-significant", pos = 4, cex = 1.2)
rect(-60, 0, -40, 10, col = hcl(0, 20, 50))
rect(-40, 0, -20, 10, col = hcl(0, 10, 70))
rect(-20, 0, 0, 10, col = hcl(0, 0, 90))
rect(0, 0, 20, 10, col = hcl(260, 0, 90))
rect(20, 0, 40, 10, col = hcl(260, 10, 70))
rect(40, 0, 60, 10, col = hcl(260, 20, 50))

lines(c(-18.75, -11.25), c(52.5, 67.5), lty = 2)
lines(c(-8.75, -1.25), c(72.5, 87.5), lty = 2)
lines(c(18.75, 11.75), c(52.5, 67.5), lty = 2)
lines(c(8.75, 1.25), c(72.5, 87.5), lty = 2)
@
\caption{Extended shading in HSV and HCL space.}
\label{fig:shadingHSVHCL}
\end{center}
\end{figure}

\subsection{Significance}

In particular,
the Friendly shading does not provide a visualization of the maximum test (\ref{eq:MaxAbs})
as in general it is unknown to which significance level $\alpha$ the
values $c_\alpha = 2$ and $4$ correspond for the table being visualized.

As pointed out in Section \ref{sec:tests}, the critical values for
the maximum statistic $M$ from (\ref{eq:MaxAbs}) can be derived
from the permutation distribution. Instead of the hard-coded
values 2 and 4, the particular critical values, e.g., at the levels
$\alpha = 0.1$ and $0.01$, for the table to be visualized could be
used. Hence, exactly those residuals causing the (potential)
dependency within the table are highlighted. At the moment, these critical values
are derived in \texttt{vcd} by simulation of the underlying distribution.

To illustrate what a `postive' example looks like we give the association plot
for the well-known Hair-Eye-Color data set (avilable in base \textsf{R}) which cross-tabulates the hair and eye
color and gender of 592 statistics students: Figure \ref{fig:haireye-assoc-signif}
shows the association plot for the 328 female students. It is easy to see that
the hypothesis of independence is rejected at 1\% level by the maximum test (\ref{eq:MaxAbs})
due to higher frequencies of students with hair and eye color
black/brown and blond/blue and lower frequencies of
blond/brown and brown/blue than would be plausible under independence. Furthermore,
it can also be seen that the residual corresponding to the black/blue
cell is significant at the 10\% level.

We have seen that this approach performs very well when the test statistic
which should be visualized is the maximum statistic (\ref{eq:MaxAbs}). However,
it is difficult to extend this approach to general tests for independence,
in particular in the HCL space, where the ranges of chroma and luminance are
not independent. In contrast the HSV space has the advantage that all
three dimensions hue, saturation and value have the range $[0,1]$ and can
be varied independently. Therefore, a different approach than the one
described above could be to use the hue for the sign of the residuals as
before, the saturation for the absolute size of the residuals, and the
value as an indicator for the significance of some test statistic (only
using the full value when the overall test for independence rejects
the null hypothesis). The resulting mosaic plots under this paradigm
are depicted in Figure \ref{fig:both-mosaic-signif}. Again, it can
clearly be seen that despite some large residuals there is no
evidence against independence for the Bundesliga data, but that the
null hypothesis has to be rejected for the Hair-Eye-Color data.

\setkeys{Gin}{width=\textwidth}
\begin{figure}[htbp]
\begin{center}
<<shadings,fig=TRUE,echo=FALSE,height=6,width=11,results=hide>>=
grid.newpage()
pushViewport(viewport(layout = grid.layout(1, 2)))
pushViewport(viewport(layout.pos.col=1, layout.pos.row=1))
mosaic(art, newpage = FALSE, gp = shading_Friendly, margins = c(2.5, 4, 2.5, 3), gp_args = list(eps = NULL, lty = 1))
popViewport()
pushViewport(viewport(layout.pos.col=2, layout.pos.row=1))
mosaic(art, newpage = FALSE, gp = art_gp, margins = c(2.5, 3, 2.5, 4))
popViewport(2)
@
\caption{Mosaic plot for the Arthritis data with Friendly shading (left) and extended shading (right).}
\label{fig:shadings}
\end{center}
\end{figure}

\section{Extensions to Conditional Independence}

UCB admissions data \citep{vcd:Bickel+Hammel+O'Connell:1975}
double max: \Sexpr{stat(ucb_doublemax)}, p-value = \Sexpr{pval(ucb_doublemax)}
max Chisq: \Sexpr{stat(ucb_maxChisq)}, p-value = \Sexpr{pval(ucb_maxChisq)}
sum Chisq: \Sexpr{stat(ucb_sumChisq)}, p-value = \Sexpr{pval(ucb_sumChisq)}
simulated from $5000$ repetitions


\cite{vcd:Friendly:1999} discusses grouping similar to coplots (conditioning
plots) \citep{vcd:Cleveland:1993} that lead to trellis graphics
\citep{vcd:Becker+Cleveland+Shyu:1996}.

Independence problems do not only occur in 2-way tables, although that
is an important special case, but they are also important in tables of
higher dimensionality and can follow much more complex patterns.
These are again defined based on the underlying table of theoretical cell probabilities
$(\pi_{ij\dots})$ with more than two dimensions. Models of interest include the
null hypotheses of conditional independence:
  \[ \pi_{ijk\dots} = \pi_{i|k\dots}\pi_{j|k\dots} \]

Classical non-graphical methods for these problems include the $\chi^2$
test, Fisher's exact test, the Cochran-Mantel-Haenzel test (for $2 \times 2 \times
K$-tables), and the analysis of log-linear models for more
complex settings.

As an example, two natural ways to use the visualization techniques described in the previous
sections would be to use (Trellis-like) conditioning plots or pairs plots
(like mosaic matrices) to visualize these more complex patterns of
independence.

Two ideas for the problem of conditional independence are briefly outlined
here and illustrated using the famous admissions data of the University of
California at Berkley (UCB) which is available in base \textsf{R}.
In this data, the question whether there is gender
discrimination at the UCB leads to the result that although women seem to
be disadvantaged at the aggregated level there is no gender discrimination
conditioned on the department---with the very exception of one department
in which women are {\em more} likely to be admitted than would be plausible
under independence. Exactly this is illustrated in the conditioning
assocation plot in Figure \ref{fig:UCB-assoc-signif}.

Similarly, the same data can be visualized using a mosaic matrix where
a conditional independence model is fitted in each plot (see Figure
\ref{fig:UCB-mosaic-signif}).

\setkeys{Gin}{width=\textwidth}
\begin{figure}[htbp]
\begin{center}
<<conditional_assoc,fig=TRUE,echo=FALSE,height=6,width=9>>=
cotabplot(~ Gender + Admit | Dept, data = ucb, panel = ucb_cotab)
@
\caption{Conditional association plot for UCB admissions.}
\label{fig:emp-mosaic1}
\end{center}
\end{figure}

\section{Conclusions}


\bibliography{vcd}

\end{document}

%% for reproducibility, print also

<<graphics>>
## load packages and data
library(vcd)
data(Arthritis)
art <- xtabs(~ Treatment + Improved, data = Arthritis, subset = Sex == "Female")
data(UCBAdmissions)
ucb <- aperm(UCBAdmissions)

## plain classic plots
mosaic(art)
assoc(art)

## new max shading with HCL colors
mosaic(art, gp = shading_Friendly)
set.seed(1234)
mosaic(art, gp = shading_max)

## conditional independence
set.seed(1234)
cotabplot(~ Admit + Gender | Dept, data = ucb, panel = cotab_coindep, type = "assoc")
## which uses the double max functional
set.seed(1234)
coindep_test(ucb, "Dept")

## alternatively use Peason functional
## via simulation of conditional distribution:
set.seed(1234)
coindep_test(ucb, "Dept", indepfun = function(x) sum(x^2), aggfun = sum)
## via asymptotic distribution:
fm <- loglm(~ Dept * (Gender + Admit), data = ucb)
fm
plot(fm, labeling_args = list(abbreviate = c(Admit = 2)))
@

%% deprecated stuff

%% employment data
<<employment>>
## data
data(Employment)
emp <- aperm(Employment)
emp1 <- co_table(Employment, "LayoffCause")[["Replaced"]]

## plain
assoc(emp1)
mosaic(emp1)

## new shadings
mosaic(emp1, gp = shading_Friendly)
mosaic(emp1, gp = shading_max)

## conditional
mosaic(emp, expected = ~(EmploymentStatus+EmploymentLength)*LayoffCause)
cotabplot(emp, "LayoffCause", split_vertical = TRUE)
cotabplot(emp, panel = cotab_coindep, type = "assoc")
cotabplot(emp, "LayoffCause", panel = cotab_coindep, type = "assoc", split_vertical = TRUE)
@

%% Friendly shading in detail
\setkeys{Gin}{width=0.8\textwidth}
\begin{figure}[htbp]
\begin{center}
<<Friendly-hue,fig=TRUE,echo=FALSE,height=4.8,width=8>>
plot(0.5, 0.5, xlim = c(0, 1), ylim = c(0, 1), type = "n", axes = FALSE, xlab = "", ylab = "", yaxs = "i")
dummy <- 0:100/100
dummy.col <- hsv(dummy[-101] + 1/200, 1, 1)
rect(dummy[-101], 0.6, dummy[-1], 1, border = dummy.col, col = dummy.col)
rect(0, 0.6, 1, 1)
axis(3)
mtext("hue", line = 2, cex = 1.5)
text(1, 0.45, "saturation = 1\nvalue = 1", pos = 2, cex = 1.2)
lines(c(0.1, 0), c(0.3, 0.6), lty = 2)
lines(c(2/3, 2/3), c(0.3, 0.6), lty = 2)
rect(0, 0.1, 0.2, 0.3, col = hsv(0, 1, 1))
rect(2/3 - 0.1, 0.1, 2/3 + 0.1, 0.3, col = hsv(2/3, 1, 1))
text(0.1, 0.1, expression(r[ij] < 0), pos = 1, cex = 1.5)
text(2/3, 0.1, expression(r[ij] > 0), pos = 1, cex = 1.5)
@

<<Friendly-sat,fig=TRUE,echo=FALSE,height=4.8,width=8>>
plot(0.5, 0.5, xlim = c(0, 1), ylim = c(0, 1), type = "n", axes = FALSE, xlab = "", ylab = "", yaxs = "i")
dummy <- 0:100/100
dummy.col <- hsv(2/3, dummy[-101] + 1/200, 1)
rect(dummy[-101], 0.8, dummy[-1], 1, border = dummy.col, col = dummy.col)
dummy.col <- hsv(0, dummy[-101] + 1/200, 1)
rect(dummy[-101], 0.6, dummy[-1], 0.8, border = dummy.col, col = dummy.col)
rect(0, 0.8, 1, 1)
rect(0, 0.6, 1, 0.8)
axis(3)
mtext("saturation", line = 2, cex = 1.5)
mtext(c("h = 0", "h = 2/3"), side = 2, at = c(0.7, 0.9), las = 1, cex = 1.2)
text(0.8, 0.5, "value = 1", pos = 2, cex = 1.2)
lines(c(0.1, 0), c(0.3, 0.6), lty = 2)
lines(c(0.5, 0.5), c(0.3, 0.6), lty = 2)
lines(c(0.9, 1), c(0.3, 0.6), lty = 2)
rect(0, 0.2, 0.2, 0.3, col = hsv(2/3, 0, 1))
rect(0, 0.1, 0.2, 0.2, col = hsv(0, 0, 1))
rect(0.4, 0.2, 0.6, 0.3, col = hsv(2/3, 0.5, 1))
rect(0.4, 0.1, 0.6, 0.2, col = hsv(0, 0.5, 1))
rect(0.8, 0.2, 1, 0.3, col = hsv(2/3, 1, 1))
rect(0.8, 0.1, 1, 0.2, col = hsv(0, 1, 1))
text(0.1, 0.1, expression(abs(r[ij]) < 2), pos = 1, cex = 1.5)
text(0.5, 0.1, expression((2 < abs(r[ij])) < 4), pos = 1, cex = 1.5)
text(0.9, 0.1, expression(abs(r[ij]) > 4), pos = 1, cex = 1.5)
@

<<Friendly-val,fig=TRUE,echo=FALSE,height=4.8,width=8>>
plot(0.5, 0.5, xlim = c(0, 1), ylim = c(0, 1), type = "n", axes = FALSE, xlab = "", ylab = "", yaxs = "i")
dummy <- 0:100/100
dummy.col <- hsv(2/3, 1, dummy[-101] + 1/200)
rect(dummy[-101], 0.8, dummy[-1], 1, border = dummy.col, col = dummy.col)
dummy.col <- hsv(0, 1, dummy[-101] + 1/200)
rect(dummy[-101], 0.6, dummy[-1], 0.8, border = dummy.col, col = dummy.col)
rect(0, 0.8, 1, 1)
rect(0, 0.6, 1, 0.8)
axis(3)
mtext("value", line = 2, cex = 1.5)
mtext(c("h = 0", "h = 2/3"), side = 2, at = c(0.7, 0.9), las = 1, cex = 1.2)
text(0, 0.5, paste("saturation =", 1), pos = 4, cex = 1.2)
lines(c(0.85, 1), c(0.3, 0.6), lty = 2)
rect(0.7, 0.2, 0.8, 0.3, col = hsv(2/3, 0, 1))
rect(0.8, 0.2, 0.9, 0.3, col = hsv(2/3, 0.5, 1))
rect(0.9, 0.2, 1, 0.3, col = hsv(2/3, 1, 1))
rect(0.7, 0.1, 0.8, 0.2, col = hsv(0, 0, 1))
rect(0.8, 0.1, 0.9, 0.2, col = hsv(0, 0.5, 1))
rect(0.9, 0.1, 1, 0.2, col = hsv(0, 1, 1))
lines(c(0.5, 0.5), c(0.3, 0.6), lty = 2)
lines(c(0.85, 1), c(0.3, 0.6), lty = 2)
rect(0.35, 0.2, 0.45, 0.3, col = hsv(2/3, 0, 0.5))
rect(0.45, 0.2, 0.55, 0.3, col = hsv(2/3, 0.5, 0.5))
rect(0.55, 0.2, 0.65, 0.3, col = hsv(2/3, 1, 0.5))
rect(0.35, 0.1, 0.45, 0.2, col = hsv(0, 0, 0.5))
rect(0.45, 0.1, 0.55, 0.2, col = hsv(0, 0.5, 0.5))
rect(0.55, 0.1, 0.65, 0.2, col = hsv(0, 1, 0.5))
rect(0.7, 0.2, 0.8, 0.3, col = hsv(2/3, 0, 1))
rect(0.8, 0.2, 0.9, 0.3, col = hsv(2/3, 0.5, 1))
rect(0.9, 0.2, 1, 0.3, col = hsv(2/3, 1, 1))
rect(0.7, 0.1, 0.8, 0.2, col = hsv(0, 0, 1))
rect(0.8, 0.1, 0.9, 0.2, col = hsv(0, 0.5, 1))
rect(0.9, 0.1, 1, 0.2, col = hsv(0, 1, 1))
text(0.5, 0.1, "non-significant", pos = 1, cex = 1.5)
text(0.85, 0.1, "significant", pos = 1, cex = 1.5)
@

\caption{Extended Friendly shading in HSV space.}
\label{fig:Friendly-HSV}
\end{center}
\end{figure}

